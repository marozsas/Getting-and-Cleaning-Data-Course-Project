submit()
submit()
submit()
submit()
submit()
swirl()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, col = sex_class, into = c("sex", "class"))
submit ()
students3
?chain
submit()
submit()
View(students3)
View(students3)
submit()
submit()
reset()
reset()
play
play()
submit()
swirl()
play()
students3
students3 %>% gather(class, class1:class5)
gather(students3, class, class1:class5)
gather(students3, class, class1)
gather(students3, class, class1, -name)
students3
gather(students3, class, class1, -name)
gather(students3, class, class1:class5, -name)
gather(students3, key=class, value=grade, class1:class5, -name)
gather(students3, key=class, value=grade, class1:class5)
nxt()
submit()
submit()
submit()
?spread
submit()
submit()
submit()
play()
gather(students3, key=class, value=grade, class1:class5)
gather(students3, key=class, value=grade, class1:class5, na.rm = TRUE)
gather(students3, key=class, value=grade, class1:class5, na.rm = TRUE) %>% spread (key=test
)
gather(students3, key=class, value=grade, class1:class5, na.rm = TRUE) %>% spread (key=test, value=grade)
nxt()
submit()
library(readr)
parse_number("class5")
submit()
submit()
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate (passed, status="passed")
failed <- mutate (passed, status="failed")
failed <- mutate (failed, status="failed")
bind_rows(passed, failed)
sat
submit()
submit()
Sys.getlocale("LC_TIME")
play()
Sys.getlocale("LC_TIME")
Sys.setlocale("en_US.UTF-8")
Sys.setlocale("LC_ALL", "en_US.UTF-8")
Sys.getlocale("LC_TIME")
nxt()
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy ("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt1)
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 12, minutes = 27)
this_moment
nyc <- now ("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minute(50)
arrive <- depart + (hours(15) + minute(50))
arrive <- (depart + hours(15)) + minute(50)
arrive <- depart + hours(15:50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008")
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
load (swirl)
library (swirl)
awirl
swirl()
?Comparison
quit ()
library (swirl)
swirl()
mydf <- read.csv (path2csv, stringsAsFactors = FALSE)
dim (mydf)
head (mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select (cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country== "US")
?Comparison
filter(cran, r_version <= "3.0.2", country== "IB")
filter(cran, r_version <= "3.0.2", country== "IN")
filter(cran, country == "US" | country == "IN")
select (cran, size>100500, r_os=="linux-gnu")
filter (cran, size>100500, r_os=="linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter (cran, !is.na(r_version))
cran2 <- select (cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select (ip_id, package, and size)
cran3 <- select (ip_id, package, size)
cran3 <- select (cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb= size_mb / 2^10)
mutate(cran3, correct_size= size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(cran, mean(size))
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted <-  arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted <- arrange (top_unique, desc(unique))
View (top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
0
swirl()
library (swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, col = sex_class, into = c("sex", "class"))
submit()
students3
submit()
submit()
?spread
submit()
play()
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE)
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>% spread (test, class)
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>% spread (test, test)
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>% spread (test, test, fill=NA)
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE)
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>% spread (test, xasdxa)
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>% spread (test, class)
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>% spread (name, test)
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>% spread (test, grade)
nxt()
submit()
library(readr)
parse_number("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate (passed, status= "passed")
failed <- mutate (failed, status= "failed")
?bind_rows
bind_rows(passed, failed)
sat
submit()
submit()
library(tidyr)
quit()
source('~/src/datasciencecoursera/CleaningData/assignment/run_analysis.R')
s1 <- test[1:5, ]
s2 <- train[1:5, ]
View(s1)
s1 <- subset(s1, select= c(subject, partition, activity))
s2 <- subset(s2, select= c(subject, partition, activity))
rbind (train, test)
rbind (s1, s2)
rownames(s1)
rownames(s2)
rownames(s2) <- 6:10
rownames(s2)
rbind (s1, s2)
rownames(s1)
rownames(s2)
rownames(s1) <- NULL
rownames(s2) <- NULL
rbind (s1, s2)
rownames(s1)
rownames(s2)
rownames(s2) <- 6:10
rbind (s1, s2)
class (s1)
str(s1)
View(subject)
test$subject <- subject$V1
test$activity <- activity$V1
s1 <- test[1:5, ]
s1 <- subset(s1, select= c(subject, partition, activity))
str(s1)
train$activity <- activity$V1
source('~/src/datasciencecoursera/CleaningData/assignment/run_analysis.R')
View(data)
s1 <- data[10:10, ]
s1 <- data[10:20, ]
s1 <- data[1000:1010, ]
s1 <- subset(data, select= c(subject, partition, activity))
tail (s1)
s1[1000:1010, ]
s1[5000:5010, ]
s1[1000:1010, ]
s1[3000:3010, ]
s1[5000:5010, ]
s1[9000:9010, ]
s1[6000:6010, ]
source('~/src/datasciencecoursera/CleaningData/assignment/run_analysis.R')
source('~/src/datasciencecoursera/CleaningData/assignment/run_analysis.R')
s1 <- subset(data, select= c(subject, partition, activity))
s1[1000:1010, ]
s1[2000:2010, ]
s1[3000:3010, ]
s1[7000:7010, ]
s1[7350:7360, ]
s2 <- subset(test, select= c(subject, partition, activity))
s2[1:10,]
source('~/src/datasciencecoursera/CleaningData/assignment/run_analysis.R')
s1[7350:7355, ]
s1[10290:10299, ]
partition
p_test <- partition[1]
p_train <- partition[2]
p_test
p_test <- partition[2]
p_train <- partition[1]
p_test
source('~/src/datasciencecoursera/CleaningData/assignment/run_analysis.R')
s1[10290:10299, ]
rm (s1, s2)
p_test
colnames(data)
scol <- colnames(data)
grep ("mean", scol, ignore.case=TRUE)
scol[grep ("mean", scol, ignore.case=TRUE)]
scol[grep ("mean|sdev", scol, ignore.case=TRUE)]
scol[grep ("mean|std", scol, ignore.case=TRUE)]
scol <- scol[grep ("mean|std", scol, ignore.case=TRUE)]
scol
data %>% select (subject, partition, activity, scol)
data[, scol]
data[, c("subject", "partition", "activity", scol)]
str (data[, c("subject", "partition", "activity", scol)])
View(activity)
fileActivityLabels= "./t.txt"
list.files()
fileActivityLabels= "activity_labels.txt"
read.table(fileActivityLabels, stringsAsFactors = TRUE)
act_lbl <- read.table(fileActivityLabels, stringsAsFactors = TRUE)
class act_lbl
class (act_lbl)
factor(act_lbl)
factor(act_lbl$V2)
factor(act_lbl$V2, ordered = TRUE)
factor(act_lbl$V1, labels = act_lbl$V2)
act_factor <- factor(act_lbl$V1, labels = act_lbl$V2)
View(act_lbl)
act_factor[3]
act_factor[6]
act_factor[1]
activity$V1
fileActivityLabels <-  "activity_labels.txt"
act_lbl <- read.table(fileActivityLabels, stringsAsFactors = TRUE)
factor(6:1, labels=act_lbl$V2)
factor(c(2,4,6,3,1), labels=act_lbl$V2)
factor(c(2,3,4,3,1,5,6), labels=act_lbl$V2)
factor(c(2,3,4,3,1,5,6), levels = act_lbl$V1, labels=act_lbl$V2)
source('~/src/datasciencecoursera/CleaningData/assignment/run_analysis.R')
View(train)
source('~/src/datasciencecoursera/CleaningData/assignment/run_analysis.R')
View(data)
act__lbl
act_lbl
debugSource('~/src/datasciencecoursera/CleaningData/assignment/run_analysis.R')
View(data)
View(data)
rownames(data)
colnames(data)
debugSource('~/src/datasciencecoursera/CleaningData/assignment/run_analysis.R')
act_lbl
debugSource('~/src/datasciencecoursera/CleaningData/assignment/run_analysis.R')
head (group_by(data, subject, activity))
gdata <- group_by(data, subject, activity)
summarise(gdata, mean(rownames(data)))
rownames(data)
summarise(gdata, mean(colnames(data)))
colnames(data)
summarise(gdata, mean(angle_X_gravityMean))
summarise(gdata, mean(colnames(data)))
select (data, -subject)
colnames(select (data, -subject))
data_col <- colnames(select (data, -c(subject, partition, activity))
)
data_col
lenght (data_col    )
length (data_col    )
summarise(gdata, mean(data_col)
)
data_col
data_col[1:3]
summarise(gdata, mean(data_col[1:3])
)
summarise(gdata, mean(gdata[data_col[1:3]])
)
data[data_col[1:3]]
data[, data_col[1:3]]
mean (data[, data_col[1:3]])
str (data[, data_col[1:3]])
str (data[, data_col[[1:3]])
str (data[[, data_col[1:3]]])
data_col
data_col <- data_col[1:3]
data_col
str (data[[, data_col]])
str (data[, data_col])
mean (data[, data_col])
mean (data[[, data_col]])
str (data[[, data_col]])
str (data[[data_col]])
data[1:5, datacol]
data[1:5, data_col]
mean (data[1:5, data_col])
mean (data[[1:5, data_col]])
data[1:5, data_col]
colMeans(data[1:5, data_col])
summarise(gdata, colMeans(gdata[data_col[1:3]])
)
data_col
summarise(gdata, colMeans(data_col))
head (gdata[, data_col])
summarise(gdata, colMeans(gdata[,data_col]))
summarise(gdata, colMeans(gdata))
colMeans(gdata)
colMeans(gdata[5:8])
colMeans(gdata[4:8])
colMeans(gdata[3:8])
colMeans(gdata[4:8])
sumarize (gdata, colMeans(gdata[4:8])
)
summarise (gdata, colMeans(gdata[4:8]))
summarise (gdata, colMeans(gdata[4:8]))
history(
)
data.group <- subset(data, select = -c("subject", "activity"))
data.group <- subset(data, select=-c("subject", "activity"))
data.group <- subset(data, select= -c(subject, activity))
data.x <- subset(data, select= -c(subject, activity))
data.group <- subset(data, select= c(subject, activity))
aggregate(data.group, data.x, mean
)
data.x <- subset(data, select= -c(subject, activity))
data.group <- subset(data, select= c(subject, activity))
aggregate(data.x, data.group, mean)
aggregate(data.x, data.group, mean)[1:5, 1:6]
data.group <- subset(data, select= c(activity, subject))
aggregate(data.x, data.group, mean)[1:5, 1:6]
aggregate(data.x, data.group, mean)[1:13, 1:6]
data.x <- subset(data, select= -c(subject, activity, partition))
data.group <- subset(data, select= c(activity, subject))
aggregate(data.x, data.group, mean)[1:13, 1:6]
rm (gdata, data.group, data.x, test)
rm (p_test, p_train, scol)
source('~/src/datasciencecoursera/CleaningData/assignment/run_analysis.R')
View(data5)
cars
mtcars
colnames(mtcars)
rownames(mtcars) <- NULL
group_by(mtcars, c(cyl, gear))
group_by(mtcars, cyl, gear)
group_by(mtcars, cyl)
g_mtcars <- group_by(mtcars, cyl)
View(g_mtcars)
g_mtcars <- group_by(mtcars, cyl, gear)
summarise(g_mtcars, mean ())
summarise(g_mtcars, mean (hp))
summarise(g_mtcars, mean (select(mtcars, -c(cyl, gear))))
summarise(g_mtcars, mean (hp))
summarise(g_mtcars, mean (hp))
aggregate(hp ~ carb + am, mtcars, mean)
aggregate(c(hp,drat,wt) ~ carb + am, mtcars, mean)
aggregate(hp + drat + wt ~ carb + am, mtcars, mean)
aggregate(hp,drat,wt ~ carb + am, mtcars, mean)
mtcars
rownames(mtcars) <- NULL
group_by(mtcars, cyl, gear)
g_mtcars <- group_by(mtcars, cyl)
summarise(g_mtcars, mean (hp))
g_mtcars <- group_by(mtcars, cyl)
summarise(g_mtcars, mean (hp))
rownames(mtcars) <- NULL
g_mtcars <- group_by(mtcars, cyl)
g_mtcars
g_mtcars <- group_by(mtcars, cyl, gear)
g_mtcars
summarise(g_mtcars, mean (hp))
g_mtcars <- group_by(mtcars, cyl, gear)
summarise(g_mtcars, mean (hp))
colnames(mtcars)
summarise(g_mtcars, mean (hp), mean(drat))
summarise(g_mtcars, mean (hp), mean(drat), mean (wt))
